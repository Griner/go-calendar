// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calendar.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CalendarEvent_CalendarEventType int32

const (
	CalendarEvent_TASK     CalendarEvent_CalendarEventType = 0
	CalendarEvent_EVENT    CalendarEvent_CalendarEventType = 1
	CalendarEvent_REMINDER CalendarEvent_CalendarEventType = 2
)

var CalendarEvent_CalendarEventType_name = map[int32]string{
	0: "TASK",
	1: "EVENT",
	2: "REMINDER",
}

var CalendarEvent_CalendarEventType_value = map[string]int32{
	"TASK":     0,
	"EVENT":    1,
	"REMINDER": 2,
}

func (x CalendarEvent_CalendarEventType) String() string {
	return proto.EnumName(CalendarEvent_CalendarEventType_name, int32(x))
}

func (CalendarEvent_CalendarEventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{0, 0}
}

type CalendarEvent struct {
	Id                   int64                           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                          `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                 CalendarEvent_CalendarEventType `protobuf:"varint,3,opt,name=type,proto3,enum=grpc.CalendarEvent_CalendarEventType" json:"type,omitempty"`
	StartTime            *timestamp.Timestamp            `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamp.Timestamp            `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CalendarEvent) Reset()         { *m = CalendarEvent{} }
func (m *CalendarEvent) String() string { return proto.CompactTextString(m) }
func (*CalendarEvent) ProtoMessage()    {}
func (*CalendarEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{0}
}

func (m *CalendarEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalendarEvent.Unmarshal(m, b)
}
func (m *CalendarEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalendarEvent.Marshal(b, m, deterministic)
}
func (m *CalendarEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalendarEvent.Merge(m, src)
}
func (m *CalendarEvent) XXX_Size() int {
	return xxx_messageInfo_CalendarEvent.Size(m)
}
func (m *CalendarEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_CalendarEvent.DiscardUnknown(m)
}

var xxx_messageInfo_CalendarEvent proto.InternalMessageInfo

func (m *CalendarEvent) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CalendarEvent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CalendarEvent) GetType() CalendarEvent_CalendarEventType {
	if m != nil {
		return m.Type
	}
	return CalendarEvent_TASK
}

func (m *CalendarEvent) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *CalendarEvent) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

type CalendarServiceError struct {
	Code                 int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalendarServiceError) Reset()         { *m = CalendarServiceError{} }
func (m *CalendarServiceError) String() string { return proto.CompactTextString(m) }
func (*CalendarServiceError) ProtoMessage()    {}
func (*CalendarServiceError) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{1}
}

func (m *CalendarServiceError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalendarServiceError.Unmarshal(m, b)
}
func (m *CalendarServiceError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalendarServiceError.Marshal(b, m, deterministic)
}
func (m *CalendarServiceError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalendarServiceError.Merge(m, src)
}
func (m *CalendarServiceError) XXX_Size() int {
	return xxx_messageInfo_CalendarServiceError.Size(m)
}
func (m *CalendarServiceError) XXX_DiscardUnknown() {
	xxx_messageInfo_CalendarServiceError.DiscardUnknown(m)
}

var xxx_messageInfo_CalendarServiceError proto.InternalMessageInfo

func (m *CalendarServiceError) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CalendarServiceError) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type NewCalendarEventRequest struct {
	Event                *CalendarEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *NewCalendarEventRequest) Reset()         { *m = NewCalendarEventRequest{} }
func (m *NewCalendarEventRequest) String() string { return proto.CompactTextString(m) }
func (*NewCalendarEventRequest) ProtoMessage()    {}
func (*NewCalendarEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{2}
}

func (m *NewCalendarEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewCalendarEventRequest.Unmarshal(m, b)
}
func (m *NewCalendarEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewCalendarEventRequest.Marshal(b, m, deterministic)
}
func (m *NewCalendarEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewCalendarEventRequest.Merge(m, src)
}
func (m *NewCalendarEventRequest) XXX_Size() int {
	return xxx_messageInfo_NewCalendarEventRequest.Size(m)
}
func (m *NewCalendarEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewCalendarEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewCalendarEventRequest proto.InternalMessageInfo

func (m *NewCalendarEventRequest) GetEvent() *CalendarEvent {
	if m != nil {
		return m.Event
	}
	return nil
}

type NewCalendarEventResponse struct {
	Error                *CalendarServiceError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *NewCalendarEventResponse) Reset()         { *m = NewCalendarEventResponse{} }
func (m *NewCalendarEventResponse) String() string { return proto.CompactTextString(m) }
func (*NewCalendarEventResponse) ProtoMessage()    {}
func (*NewCalendarEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{3}
}

func (m *NewCalendarEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewCalendarEventResponse.Unmarshal(m, b)
}
func (m *NewCalendarEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewCalendarEventResponse.Marshal(b, m, deterministic)
}
func (m *NewCalendarEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewCalendarEventResponse.Merge(m, src)
}
func (m *NewCalendarEventResponse) XXX_Size() int {
	return xxx_messageInfo_NewCalendarEventResponse.Size(m)
}
func (m *NewCalendarEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewCalendarEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewCalendarEventResponse proto.InternalMessageInfo

func (m *NewCalendarEventResponse) GetError() *CalendarServiceError {
	if m != nil {
		return m.Error
	}
	return nil
}

type UpdateCalendarEventRequest struct {
	Event                *CalendarEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateCalendarEventRequest) Reset()         { *m = UpdateCalendarEventRequest{} }
func (m *UpdateCalendarEventRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCalendarEventRequest) ProtoMessage()    {}
func (*UpdateCalendarEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{4}
}

func (m *UpdateCalendarEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCalendarEventRequest.Unmarshal(m, b)
}
func (m *UpdateCalendarEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCalendarEventRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCalendarEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCalendarEventRequest.Merge(m, src)
}
func (m *UpdateCalendarEventRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCalendarEventRequest.Size(m)
}
func (m *UpdateCalendarEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCalendarEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCalendarEventRequest proto.InternalMessageInfo

func (m *UpdateCalendarEventRequest) GetEvent() *CalendarEvent {
	if m != nil {
		return m.Event
	}
	return nil
}

type UpdateCalendarEventResponse struct {
	Error                *CalendarServiceError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateCalendarEventResponse) Reset()         { *m = UpdateCalendarEventResponse{} }
func (m *UpdateCalendarEventResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateCalendarEventResponse) ProtoMessage()    {}
func (*UpdateCalendarEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{5}
}

func (m *UpdateCalendarEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCalendarEventResponse.Unmarshal(m, b)
}
func (m *UpdateCalendarEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCalendarEventResponse.Marshal(b, m, deterministic)
}
func (m *UpdateCalendarEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCalendarEventResponse.Merge(m, src)
}
func (m *UpdateCalendarEventResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateCalendarEventResponse.Size(m)
}
func (m *UpdateCalendarEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCalendarEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCalendarEventResponse proto.InternalMessageInfo

func (m *UpdateCalendarEventResponse) GetError() *CalendarServiceError {
	if m != nil {
		return m.Error
	}
	return nil
}

type GetCalendarEventRequest struct {
	EventId              int64    `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCalendarEventRequest) Reset()         { *m = GetCalendarEventRequest{} }
func (m *GetCalendarEventRequest) String() string { return proto.CompactTextString(m) }
func (*GetCalendarEventRequest) ProtoMessage()    {}
func (*GetCalendarEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{6}
}

func (m *GetCalendarEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCalendarEventRequest.Unmarshal(m, b)
}
func (m *GetCalendarEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCalendarEventRequest.Marshal(b, m, deterministic)
}
func (m *GetCalendarEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCalendarEventRequest.Merge(m, src)
}
func (m *GetCalendarEventRequest) XXX_Size() int {
	return xxx_messageInfo_GetCalendarEventRequest.Size(m)
}
func (m *GetCalendarEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCalendarEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCalendarEventRequest proto.InternalMessageInfo

func (m *GetCalendarEventRequest) GetEventId() int64 {
	if m != nil {
		return m.EventId
	}
	return 0
}

type GetCalendarEventResponse struct {
	Event                *CalendarEvent        `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	Error                *CalendarServiceError `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetCalendarEventResponse) Reset()         { *m = GetCalendarEventResponse{} }
func (m *GetCalendarEventResponse) String() string { return proto.CompactTextString(m) }
func (*GetCalendarEventResponse) ProtoMessage()    {}
func (*GetCalendarEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{7}
}

func (m *GetCalendarEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCalendarEventResponse.Unmarshal(m, b)
}
func (m *GetCalendarEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCalendarEventResponse.Marshal(b, m, deterministic)
}
func (m *GetCalendarEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCalendarEventResponse.Merge(m, src)
}
func (m *GetCalendarEventResponse) XXX_Size() int {
	return xxx_messageInfo_GetCalendarEventResponse.Size(m)
}
func (m *GetCalendarEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCalendarEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCalendarEventResponse proto.InternalMessageInfo

func (m *GetCalendarEventResponse) GetEvent() *CalendarEvent {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *GetCalendarEventResponse) GetError() *CalendarServiceError {
	if m != nil {
		return m.Error
	}
	return nil
}

type DeleteCalendarEventRequest struct {
	EventId              int64    `protobuf:"varint,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCalendarEventRequest) Reset()         { *m = DeleteCalendarEventRequest{} }
func (m *DeleteCalendarEventRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCalendarEventRequest) ProtoMessage()    {}
func (*DeleteCalendarEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{8}
}

func (m *DeleteCalendarEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCalendarEventRequest.Unmarshal(m, b)
}
func (m *DeleteCalendarEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCalendarEventRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCalendarEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCalendarEventRequest.Merge(m, src)
}
func (m *DeleteCalendarEventRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCalendarEventRequest.Size(m)
}
func (m *DeleteCalendarEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCalendarEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCalendarEventRequest proto.InternalMessageInfo

func (m *DeleteCalendarEventRequest) GetEventId() int64 {
	if m != nil {
		return m.EventId
	}
	return 0
}

type DeleteCalendarEventResponse struct {
	Error                *CalendarServiceError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *DeleteCalendarEventResponse) Reset()         { *m = DeleteCalendarEventResponse{} }
func (m *DeleteCalendarEventResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteCalendarEventResponse) ProtoMessage()    {}
func (*DeleteCalendarEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{9}
}

func (m *DeleteCalendarEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCalendarEventResponse.Unmarshal(m, b)
}
func (m *DeleteCalendarEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCalendarEventResponse.Marshal(b, m, deterministic)
}
func (m *DeleteCalendarEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCalendarEventResponse.Merge(m, src)
}
func (m *DeleteCalendarEventResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteCalendarEventResponse.Size(m)
}
func (m *DeleteCalendarEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCalendarEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCalendarEventResponse proto.InternalMessageInfo

func (m *DeleteCalendarEventResponse) GetError() *CalendarServiceError {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterEnum("grpc.CalendarEvent_CalendarEventType", CalendarEvent_CalendarEventType_name, CalendarEvent_CalendarEventType_value)
	proto.RegisterType((*CalendarEvent)(nil), "grpc.CalendarEvent")
	proto.RegisterType((*CalendarServiceError)(nil), "grpc.CalendarServiceError")
	proto.RegisterType((*NewCalendarEventRequest)(nil), "grpc.NewCalendarEventRequest")
	proto.RegisterType((*NewCalendarEventResponse)(nil), "grpc.NewCalendarEventResponse")
	proto.RegisterType((*UpdateCalendarEventRequest)(nil), "grpc.UpdateCalendarEventRequest")
	proto.RegisterType((*UpdateCalendarEventResponse)(nil), "grpc.UpdateCalendarEventResponse")
	proto.RegisterType((*GetCalendarEventRequest)(nil), "grpc.GetCalendarEventRequest")
	proto.RegisterType((*GetCalendarEventResponse)(nil), "grpc.GetCalendarEventResponse")
	proto.RegisterType((*DeleteCalendarEventRequest)(nil), "grpc.DeleteCalendarEventRequest")
	proto.RegisterType((*DeleteCalendarEventResponse)(nil), "grpc.DeleteCalendarEventResponse")
}

func init() { proto.RegisterFile("calendar.proto", fileDescriptor_e3d25d49f056cdb2) }

var fileDescriptor_e3d25d49f056cdb2 = []byte{
	// 484 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0xdf, 0x8e, 0x93, 0x40,
	0x14, 0xc6, 0x85, 0xa5, 0x96, 0x9e, 0x6a, 0xad, 0xa3, 0xc9, 0x22, 0x1b, 0x15, 0x49, 0x4c, 0xea,
	0x0d, 0x6b, 0xea, 0xbf, 0xec, 0xa5, 0xb1, 0xa4, 0x69, 0xd4, 0x6e, 0x32, 0x5b, 0xbd, 0xdd, 0xb0,
	0xcc, 0x91, 0x90, 0x94, 0x3f, 0x0e, 0xb3, 0xdb, 0xec, 0x9b, 0xf8, 0x56, 0xbe, 0x92, 0x61, 0x06,
	0x54, 0x2c, 0xd4, 0xcd, 0xee, 0xdd, 0x1c, 0xe6, 0x7c, 0xdf, 0xfc, 0xf8, 0xce, 0x00, 0x8c, 0xc2,
	0x60, 0x8d, 0x29, 0x0b, 0xb8, 0x97, 0xf3, 0x4c, 0x64, 0xc4, 0x88, 0x78, 0x1e, 0xda, 0x4f, 0xa3,
	0x2c, 0x8b, 0xd6, 0x78, 0x28, 0x9f, 0x9d, 0x9d, 0x7f, 0x3b, 0x14, 0x71, 0x82, 0x85, 0x08, 0x92,
	0x5c, 0xb5, 0xb9, 0x3f, 0x74, 0xb8, 0xfb, 0xa1, 0x52, 0xfa, 0x17, 0x98, 0x0a, 0x32, 0x02, 0x3d,
	0x66, 0x96, 0xe6, 0x68, 0x93, 0x3d, 0xaa, 0xc7, 0x8c, 0x10, 0x30, 0xd2, 0x20, 0x41, 0x4b, 0x77,
	0xb4, 0xc9, 0x80, 0xca, 0x35, 0x39, 0x02, 0x43, 0x5c, 0xe6, 0x68, 0xed, 0x39, 0xda, 0x64, 0x34,
	0x7d, 0xee, 0x95, 0x67, 0x79, 0x0d, 0x9b, 0x66, 0xb5, 0xba, 0xcc, 0x91, 0x4a, 0x09, 0x39, 0x02,
	0x28, 0x44, 0xc0, 0xc5, 0x69, 0x49, 0x62, 0x19, 0x8e, 0x36, 0x19, 0x4e, 0x6d, 0x4f, 0x61, 0x7a,
	0x35, 0xa6, 0xb7, 0xaa, 0x31, 0xe9, 0x40, 0x76, 0x97, 0x35, 0x79, 0x03, 0x26, 0xa6, 0x4c, 0x09,
	0x7b, 0xff, 0x15, 0xf6, 0x31, 0x65, 0x65, 0xe5, 0xbe, 0x85, 0xfb, 0x5b, 0x30, 0xc4, 0x04, 0x63,
	0xf5, 0xfe, 0xe4, 0xe3, 0xf8, 0x16, 0x19, 0x40, 0xcf, 0xff, 0xea, 0x2f, 0x57, 0x63, 0x8d, 0xdc,
	0x01, 0x93, 0xfa, 0x9f, 0x17, 0xcb, 0x99, 0x4f, 0xc7, 0xba, 0x3b, 0x83, 0x87, 0xb5, 0xee, 0x04,
	0xf9, 0x45, 0x1c, 0xa2, 0xcf, 0x79, 0xc6, 0xcb, 0x40, 0xc2, 0x8c, 0x61, 0x15, 0x91, 0x5c, 0x13,
	0x0b, 0xfa, 0x09, 0x16, 0x45, 0x10, 0xd5, 0x39, 0xd5, 0xa5, 0x3b, 0x83, 0xfd, 0x25, 0x6e, 0x1a,
	0x00, 0x14, 0xbf, 0x9f, 0x63, 0x21, 0xc8, 0x0b, 0xe8, 0x61, 0x59, 0x4b, 0xa7, 0xe1, 0xf4, 0x41,
	0x4b, 0x8c, 0x54, 0x75, 0xb8, 0x9f, 0xc0, 0xda, 0x76, 0x29, 0xf2, 0x2c, 0x2d, 0x90, 0xbc, 0x84,
	0x1e, 0x96, 0x60, 0x95, 0x8d, 0xdd, 0xb4, 0xf9, 0x1b, 0x9d, 0xaa, 0x46, 0x77, 0x0e, 0xf6, 0x97,
	0x9c, 0x05, 0x02, 0x6f, 0x8a, 0x75, 0x0c, 0x07, 0xad, 0x46, 0xd7, 0x26, 0x7b, 0x0d, 0xfb, 0x73,
	0x14, 0xad, 0x58, 0x8f, 0xc0, 0x94, 0x87, 0x9e, 0xfe, 0xbe, 0x9d, 0x7d, 0x59, 0x2f, 0x98, 0xbb,
	0x01, 0x6b, 0x5b, 0x55, 0x31, 0x5c, 0xfd, 0x6d, 0xfe, 0xe0, 0xea, 0x57, 0xc5, 0x7d, 0x07, 0xf6,
	0x0c, 0xd7, 0xd8, 0x11, 0xe4, 0x0e, 0xe2, 0x63, 0x38, 0x68, 0x15, 0x5e, 0x37, 0xb8, 0xe9, 0x4f,
	0x1d, 0xee, 0xfd, 0xb3, 0x4f, 0x16, 0x60, 0x2e, 0x71, 0xa3, 0xbe, 0xea, 0xc7, 0xca, 0xa2, 0xe3,
	0x2a, 0xda, 0x4f, 0xba, 0xb6, 0x2b, 0x20, 0x0a, 0x43, 0x35, 0x68, 0xe5, 0xe6, 0xa8, 0xf6, 0xee,
	0x4b, 0x64, 0x3f, 0xdb, 0xd1, 0x51, 0x79, 0x2e, 0xc0, 0x9c, 0xa3, 0x68, 0xe0, 0x75, 0xcc, 0xbe,
	0xc6, 0xeb, 0x1c, 0x32, 0x85, 0xa1, 0x8a, 0xb3, 0x81, 0xd7, 0x3d, 0x9a, 0x1a, 0x6f, 0xc7, 0x0c,
	0xce, 0x6e, 0xcb, 0x7f, 0xca, 0xab, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3f, 0x7c, 0xd0, 0xcd,
	0x59, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalendarServiceClient is the client API for CalendarService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalendarServiceClient interface {
	NewEvent(ctx context.Context, in *NewCalendarEventRequest, opts ...grpc.CallOption) (*NewCalendarEventResponse, error)
	UpdateEvent(ctx context.Context, in *UpdateCalendarEventRequest, opts ...grpc.CallOption) (*UpdateCalendarEventResponse, error)
	GetEvent(ctx context.Context, in *GetCalendarEventRequest, opts ...grpc.CallOption) (*GetCalendarEventResponse, error)
	// rpc GetAllEvents (?) returns (?); // todo stream
	DeleteEvent(ctx context.Context, in *DeleteCalendarEventRequest, opts ...grpc.CallOption) (*DeleteCalendarEventResponse, error)
}

type calendarServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalendarServiceClient(cc *grpc.ClientConn) CalendarServiceClient {
	return &calendarServiceClient{cc}
}

func (c *calendarServiceClient) NewEvent(ctx context.Context, in *NewCalendarEventRequest, opts ...grpc.CallOption) (*NewCalendarEventResponse, error) {
	out := new(NewCalendarEventResponse)
	err := c.cc.Invoke(ctx, "/grpc.CalendarService/NewEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarServiceClient) UpdateEvent(ctx context.Context, in *UpdateCalendarEventRequest, opts ...grpc.CallOption) (*UpdateCalendarEventResponse, error) {
	out := new(UpdateCalendarEventResponse)
	err := c.cc.Invoke(ctx, "/grpc.CalendarService/UpdateEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarServiceClient) GetEvent(ctx context.Context, in *GetCalendarEventRequest, opts ...grpc.CallOption) (*GetCalendarEventResponse, error) {
	out := new(GetCalendarEventResponse)
	err := c.cc.Invoke(ctx, "/grpc.CalendarService/GetEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarServiceClient) DeleteEvent(ctx context.Context, in *DeleteCalendarEventRequest, opts ...grpc.CallOption) (*DeleteCalendarEventResponse, error) {
	out := new(DeleteCalendarEventResponse)
	err := c.cc.Invoke(ctx, "/grpc.CalendarService/DeleteEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalendarServiceServer is the server API for CalendarService service.
type CalendarServiceServer interface {
	NewEvent(context.Context, *NewCalendarEventRequest) (*NewCalendarEventResponse, error)
	UpdateEvent(context.Context, *UpdateCalendarEventRequest) (*UpdateCalendarEventResponse, error)
	GetEvent(context.Context, *GetCalendarEventRequest) (*GetCalendarEventResponse, error)
	// rpc GetAllEvents (?) returns (?); // todo stream
	DeleteEvent(context.Context, *DeleteCalendarEventRequest) (*DeleteCalendarEventResponse, error)
}

// UnimplementedCalendarServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalendarServiceServer struct {
}

func (*UnimplementedCalendarServiceServer) NewEvent(ctx context.Context, req *NewCalendarEventRequest) (*NewCalendarEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewEvent not implemented")
}
func (*UnimplementedCalendarServiceServer) UpdateEvent(ctx context.Context, req *UpdateCalendarEventRequest) (*UpdateCalendarEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEvent not implemented")
}
func (*UnimplementedCalendarServiceServer) GetEvent(ctx context.Context, req *GetCalendarEventRequest) (*GetCalendarEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEvent not implemented")
}
func (*UnimplementedCalendarServiceServer) DeleteEvent(ctx context.Context, req *DeleteCalendarEventRequest) (*DeleteCalendarEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEvent not implemented")
}

func RegisterCalendarServiceServer(s *grpc.Server, srv CalendarServiceServer) {
	s.RegisterService(&_CalendarService_serviceDesc, srv)
}

func _CalendarService_NewEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewCalendarEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServiceServer).NewEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.CalendarService/NewEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServiceServer).NewEvent(ctx, req.(*NewCalendarEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalendarService_UpdateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCalendarEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServiceServer).UpdateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.CalendarService/UpdateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServiceServer).UpdateEvent(ctx, req.(*UpdateCalendarEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalendarService_GetEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCalendarEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServiceServer).GetEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.CalendarService/GetEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServiceServer).GetEvent(ctx, req.(*GetCalendarEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalendarService_DeleteEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCalendarEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServiceServer).DeleteEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.CalendarService/DeleteEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServiceServer).DeleteEvent(ctx, req.(*DeleteCalendarEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CalendarService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.CalendarService",
	HandlerType: (*CalendarServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewEvent",
			Handler:    _CalendarService_NewEvent_Handler,
		},
		{
			MethodName: "UpdateEvent",
			Handler:    _CalendarService_UpdateEvent_Handler,
		},
		{
			MethodName: "GetEvent",
			Handler:    _CalendarService_GetEvent_Handler,
		},
		{
			MethodName: "DeleteEvent",
			Handler:    _CalendarService_DeleteEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calendar.proto",
}
